library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity singlePortRAM_TB is
end entity;

architecture testbench of singlePortRAM_TB is
	signal CLK, WE_B: std_logic;
	signal ADDR: STD_LOGIC_VECTOR(4 downto 0);
	signal DATA_IN: std_logic_vector(7 downto 0);
	signal DATA_OUT: std_logic_vector(7 downto 0);
	
	component singlePortRAM   
	port(clk, we_b: in std_logic;
		  addr: in std_logic_vector(4 downto 0);
		  data_in: in std_logic_vector(7 downto 0);
		  data_out: out std_logic_vector(7 downto 0));
	end component; 
	
	-- output constant
	
	
begin
------------------------------------
-- Device under test (DUT)
------------------------------------
DUT: singlePortRAM
	
	port map(clk => CLK,
				we_b => WE_B,
				addr => ADDR,
				data_in => DATA_IN,
				data_out => DATA_OUT);
				
------------------------------------
-- Test Processes
------------------------------------

clock: process -- note - no sensitivity list allowed
begin
	CLK <= '1';
	wait for 1 ns;
	infinite: loop
		CLK <= not CLK; wait for 1 ns;
	end loop;
end process;

reset: process -- write enable bar
begin
	WE_B <= '0'; wait;
end process reset;

-- clock cycle = 2 ns
running: process -- note - no sensitivity list allowed
begin
	ADDR <= (others => '0');
	
	-- test all values
	for i in 0 to 31 loop
	wait for 10 ns;
	ADDR <= std_logic_vector(to_unsigned(i,5));
	DATA_IN<= X"FF";
	end loop;
	
	
end process running;
------------------------------------------
-- End test processes
------------------------------------------

end architecture;